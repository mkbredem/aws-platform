- name: Configuration tasks with become   
  become: true  
  block: 

    - name: Disable rhui repositories
      ansible.builtin.shell: yum-config-manager --disable *rhui*

    - name: prevent rhui repos from reinstating on reboot
      lineinfile:
        regexp: '^disable_system_repos'
        line: 'disable_system_repos = 1'
        path: /etc/yum/pluginconf.d/subscription-manager.conf
      when: not graphical_interface

    - name: unregister system from subscription manager
      ansible.builtin.command: subscription-manager unregister
      ignore_errors: True

    - name: clear subscription-manager meta information
      ansible.builtin.command: subscription-manager clean

#    - name: Register as user (joe_user) with password (somepass) and auto-subscribe to available content.
#      redhat.rhel_system_roles.redhat_subscription:
#        state: present
#        username: "{{ lookup('env', 'PORTAL_USERNAME') }}"
#        password: "{{ lookup('env', 'PORTAL_PASSWORD') }}"
#        consumer_name: "{{ name_tag }}"
#        auto_attach: true

    - name: register system and attach rhel subscription
      community.general.redhat_subscription:
        state: present
        username: "{{ lookup('env', 'PORTAL_USERNAME') }}"
        password: "{{ lookup('env', 'PORTAL_PASSWORD') }}"
        force_register: yes
        consumer_name: "{{ name_tag }}"
#        pool_ids: "{{ subscription[subscription_name]}}"
        # consider using activation key parameter instead (see examples in docs)

    - name: make subscription-manager the default repo manager
      ansible.builtin.shell: subscription-manager config --rhsm.manage_repos=1

    - name: Register systems to RHC
      include_role:
        name: redhat.rhel_system_roles.rhc
      vars:
        rhc_insights:
          autoupdate: false
          remediation: absent
        activationKey: rhc_connector
        rhc_auth:
          login:
            username: "{{ lookup('env', 'PORTAL_USERNAME') }}"
            password: "{{ lookup('env', 'PORTAL_PASSWORD') }}"

    - name: install and configure insights insights-client
      include_role:
        name: redhat.insights.insights_client
      vars: 
      # provided via custom credential in controller
        redhat_portal_username: "{{ lookup('env', 'PORTAL_USERNAME') }}"
        redhat_portal_password: "{{ lookup('env', 'PORTAL_PASSWORD') }}"
      # provided via survey
      #  insights_display_name: "{{ name_tag }}"
        insights_tags:
          application: "{{ app_tag }}"
          environment: "{{ env_tag }}"
          name: "{{ vm_names }}"

#  - name: register system to insights
#    insights-register:
#      state: present
#      display-name: "{{ name_tag }}"

#  - name: update insights data
#    ansible.builtin.command: insights-client
#    ignore_errors: yes

    - name: install webconsole aka cockpit
      ansible.builtin.yum:
        name: cockpit
        state: latest

    - name: give cockpit time to finish instsalling
      ansible.builtin.wait_for: 
        timeout: 15
    
    - name: start cockpit socket
      ansible.builtin.service: 
        name: cockpit.socket
        enabled: yes
        state: started

    - name: update insights-client with new name to avoide error
      command: insights-client --register

    - name: add {{ lookup('env', 'PORTAL_USERNAME') }} user
      ansible.builtin.user:
        name: "{{ lookup('env', 'PORTAL_USERNAME') }}"
        groups: wheel
        append: yes
        password: "{{ lookup('env', 'PORTAL_PASSWORD') | password_hash('sha512') }}"
        update_password: always
        #PORTAL_USERNAME and PORTAL_PASSWORD are defined as custom credential

    - name: Ensure {{ lookup('env', 'PORTAL_USERNAME') }} has passwordless sudo access
      copy:
        dest: "/etc/sudoers.d/{{ lookup('env', 'PORTAL_USERNAME') }}"
        content: "{{ lookup('env', 'PORTAL_USERNAME') }} ALL=(ALL) NOPASSWD:ALL\n"
        mode: '0440'
