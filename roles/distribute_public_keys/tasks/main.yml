---
# tasks file for distribute_public_keys

- name: new_key_data value
  debug:
    var: new_key_data

- name: did bastion_server get set properly?
  debug:
    var: bastion_server

- debug:
    var: hostvars[bastion_server]
    
- debug:
    var: hostvars[bastion_server]['ansible_facts']

#- name: what are my bastion_server hostvars
#  debug:
#    var: hostvars[bastion_server]

- name: r_new_keys comment index 0
  debug:
    var: hostvars[bastion_server]['ansible_facts']['r_new_user_data']['results'][0]['comment']

- name: loop trhough r_new_keys 
  debug:
    msg: | 
      Here comes a user: {{ item['comment'] }}
      Here is their pubkey: {{ item['public_key'] }}
  loop: "{{ hostvars[bastion_server]['ansible_facts']['r_new_user_data']['results'] }}"
  when: inventory_hostname != bastion_server

- name: ensure .ssh directory exists
  ansible.builtin.file:
    path: /home/{{item}}/.ssh
    state: directory
    mode: '0700'
  loop: "{{users}}"

- name: ensure authorized_keys exists
  ansible.builtin.file:
    path: /home/{{item}}/.ssh/authorized_keys
    state: directory
    mode: '0644'
  loop: "{{users}}"

- name: update authorized keys file 
  authorized_key:
    user: "{{ item['comment'] }}"
    state: present
    key: "{{ item['public_key'] }}"
  loop: "{{ hostvars[bastion_server]['ansible_facts']['new_key_data']}}"
  when: inventory_hostname != bastion_server

# name: show key data
# debug:
#   var: "{{hostvars[bastion_server]['r_new_keys'][0]['comment']}}'s pub key is: {{hostvars[bastion_server][0]['r_new_keys']['comment']}}"
##  loop: "{{hostvars[bastion_server]['r_new_keys']}}"

- name: r_new_keys as defined by bastion server sub attribute
  debug:
    var: bastion_server['new_key_data']

- name: show key data
  debug:
    var: bastion_server
  when: inventory_hostname != bastion_server

#- name: create a directory to store the file
#  file:
#    name: /tmp/"{{ item }}"
#    state: directory
#  loop: "{{users}}"

#- name: copy the local user ssh key to temporary {{ username }} key
#  shell: 'cat /home/{{ username }}/.ssh/id_rsa.pub > /tmp/{{ username }}/id_rsa.pub'

#- name: verify that file exists
#  command: ls -l {{ username }}/

#- name: setup remote host
#  hosts: bastion, server*
#  tasks:
#    - name: create remote user, no need for SSH key
#      user:
#        name: "{{ item }}"
#      loop: "{{users}}"

#    - name: use authorized_key to set the password
#      authorized_key:
#        user: "{{ username }}"
#        key: "{{ lookup('file', './'+ username +'/id_rsa.pub') }}"
