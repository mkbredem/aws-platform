---
# tasks file for distribute_public_keys
- name: show key data
  debug:
    var: hostvars[bastion_server]['ansible_facts']['r_new_keys']}} #".comment}}: {{hostvars['Name_bastion']user_key_data.public_key}}"

- name: r_new_keys as play variable
  debug:
    var: new_key_data

- name: r_new_keys as defined by bastion server sub attribute
  debug:
    var: bastion_server['ansible_facts']['r_new_keys']

- name: show key data
  debug:
    var: bastion_server
  when: inventory_hostname != bastion_server

#- name: create a directory to store the file
#  file:
#    name: /tmp/"{{ item }}"
#    state: directory
#  loop: "{{users}}"

#- name: copy the local user ssh key to temporary {{ username }} key
#  shell: 'cat /home/{{ username }}/.ssh/id_rsa.pub > /tmp/{{ username }}/id_rsa.pub'

#- name: verify that file exists
#  command: ls -l {{ username }}/

#- name: setup remote host
#  hosts: bastion, server*
#  tasks:
#    - name: create remote user, no need for SSH key
#      user:
#        name: "{{ item }}"
#      loop: "{{users}}"

#    - name: use authorized_key to set the password
#      authorized_key:
#        user: "{{ username }}"
#        key: "{{ lookup('file', './'+ username +'/id_rsa.pub') }}"
