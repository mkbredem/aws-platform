---
- name: install aap from backup
  hosts: _aap_demo_controller
  vars: 
    installer_url: 'https://access.cdn.redhat.com/content/origin/files/sha256/eb/eb4573d15785d441782279ac7404d763e3905e7032f38d8bfa40bc75c68f9ea1/ansible-automation-platform-setup-2.4-2.tar.gz?user=145a9a523e663ed1033cd6d7d781ba2c&_auth_=1698886444_25e9f95b34ccedb50052ba82952f3449'
    backup_tar_url: 'https://www.dropbox.com/scl/fi/x2ai7dzbtkclowvjoqt6x/ac_backup2023-10-25_version_2.4-1.tar.gz?rlkey=ao33mgq52aaszo6gqtk5wj39r&dl=0'
    aap_version: '2-4'
    rhel_os: "rhel_8"
    bundle: "not_bundled"

  tasks:
    - name: download installation tar file
      get_url:
        url: "{{installer_url}}"
        dest: "/root"
      register: tar

    - name: Ensure the directory exists
      ansible.builtin.file:
        path: /root/install_aap_{{aap_version}}
        state: directory

#    - name: extract installation tar file
#      command: tar -xzf {{tar.dest}} --strip-components=1 -C /root/install_aap_{{aap_version}}/
#      register: extraction_result

    - name: Add templages file to installation directory
      template:
        src: inventory{{aap_version}}.j2
        dest: /root/install_aap_{{aap_version}}/inventory

    - name: Fetch HTML page
      ansible.builtin.uri:
        url: http://ec2-23-20-120-44.compute-1.amazonaws.com/
      register: html_response

    - name: HTML Status
      debut:
        var: html_response

#    - name: Run setup.sh script
#      ansible.builtin.shell: ./setup.sh
#      args:
#        chdir: /root/install_aap_{{aap_version}}/

    - name: download backup file
      get_url:
        url: "{{backup_tar_url}}"
        dest: "/root/install_aap_{{aap_version}}/"