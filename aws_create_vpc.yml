---
- name: Provision instance in AWS
  hosts: localhost
  gather_facts: false
# vars: defaults in group_vars/all/aws_vars.yml
  vars:
    aws_region: us-east-2
    vpc_number: 3

  tasks:

    # - name: get vpc info
    #   amazon.aws.ec2_vpc_net_info:
    #     region: "{{ region }}"
    #   register: r_vpc_info

    # - name: make sure a vpc with this name doesn't exist
    #   fail:
    #     msg: This VPC already exists
    #   when: ansible-ssa-demo-vpc{{vpc_number}} == item.vpcs.tags.Name
    #   loop: "{{ r_vpc_info.vpcs | subelements('tags') }}"
    #   loop: query( r_vpc_info.vpcs | wantlist=true

    - name: create a VPC with dedicated tenancy and a couple of tags
      amazon.aws.ec2_vpc_net:
        name: ansible-ssa-demo-vpc{{vpc_number}}
        cidr_block: 10.0.{{vpc_number}}.0/24
        region: "{{ aws_region }}"
        tags:
          Name: ansible-ssa-demo-vpc{{vpc_number}}
        tenancy: default
      register: r_vpc_facts

    - name: Create Internet gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ r_vpc_facts.vpc.id }}"
        state: present
        region: "{{ aws_region }}"
      register: r_igw
    
    - name: Create gateway route table
      amazon.aws.ec2_vpc_route_table:
        region: "{{ aws_region }}"
        vpc_id: "{{ r_vpc_facts.vpc.id }}"
        tags:
          Name: ansible-ssa-demo-vpc{{vpc_number}} Gateway route table
        gateway_id: "{{ r_igw.gateway_id }}"
      register: r_gateway_route_table

#    - name: attach internet gateway to vpc_subnet_id

#    - name: add route table (add 0.0.0.0/0 target internet gateway ID)

#    - name: create a subnet associated with vpc_subnet_id






