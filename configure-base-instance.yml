---
- name: Configure AWS EC2 Image to communicate with Insights via RHC
  hosts: "{{ target_hosts }}"
  vars:
    subscription: 
      rhel_individual_dev: 8a85f9a17e6edc09017ea0d473553242
      rhel_individual_dev2: 8a85f9a17e6edc09017e9cccdb4744a1
      rhel_self_support: 8a85f9a17d76f31b017dc514715641e6
      rhel_smart_management_std: 8a82c68d80862c7301808ba1de7157fe

  tasks:

  - name: Disable rhui repositories
    ansible.builtin.shell: yum-config-manager --disable *rhui*

  - name: prevent rhui repos from reinstating on reboot
    lineinfile:
      regexp: '^disable_system_repos'
      line: 'disable_system_repos = 1'
      path: /etc/yum/pluginconf.d/subscription-manager.conf

  - name: unregister system from subscription manager
    ansible.builtin.command: subscription-manager unregister
    ignore_errors: yes

  - name: clear our subscription manager meta information
    ansible.builtin.command: subscription-manager clean

  - name: register system and attach rhel subscription
    community.general.redhat_subscription:
      state: present
      username: "{{ lookup('env', 'PORTAL_USERNAME') }}"
      password: "{{ lookup('env', 'PORTAL_PASSWORD') }}"
      force_register: yes
      pool_ids: "{{ subscription[subscription_name]}}"
      # consider using activation key parameter instead (see examples in docs)

  - name: enable subscription manager
    ansible.builtin.shell: subscription-manager config --rhsm.manage_repos=1

  - name: Enable Ansible 2.9 rhsm repository in redehat.repo file
    community.general.rhsm_repository:
      name: ansible-2.9-for-rhel-8-x86_64-rpms
      state: enabled

  - name: install ansible Engine
    ansible.builtin.yum:
      name: 
        - ansible
        - rhc-worker-playbook
        - rhc
      state: present

  - name: run Red Hat Connector
    ansible.builtin.command: rhc connect -u {{ lookup('env', 'PORTAL_USERNAME') }} -p {{ lookup('env', 'PORTAL_PASSWORD') }}

  - name: give insights time to finish setup after running RHC
    ansible.builtin.wait_for: 
      timeout: 60

  - name: update insights data
    ansible.builtin.command: insights-client
    ignore_errors: yes

  - name: install webconsole aka cockpit
    ansible.builtin.yum:
      name: cockpit
      state: latest

  - name: give cockpit time to finish instsalling
    ansible.builtin.wait_for: 
      timeout: 15
      
  - name: start cockpit socket
    ansible.builtin.service: 
      name: cockpit.socket
      enabled: yes
      state: started

  - name: add {{ lookup('env', 'PORTAL_USERNAME') }} user
    ansible.builtin.user:
      name: "{{ lookup('env', 'PORTAL_USERNAME') }}"
      groups: wheel
      append: yes
      password: "{{ lookup('env', 'PORTAL_PASSWORD') | password_hash('sha512') }}"
      update_password: always
